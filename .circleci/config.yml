version: 2.1

jobs:
  linux:
    docker:
      - image: cimg/go:1.16
    steps:
      - checkout
      - run: gcc -o argv argv.c
      - run: go build main.go
      - run: ./main
      - store_artifacts:
          path: main
      - store_artifacts:
          path: argv

  windows:
    machine:
      image: windows-server-2019-vs2019:stable
    resource_class: windows.medium
    shell: powershell.exe
    steps:
      - checkout
      - run:
          name: Download Cygwin installer
          shell: bash.exe -eo pipefail
          command: curl -JOL https://cygwin.com/setup-x86_64.exe
      - run:
          name: Install Cygwin and required packages
          command: .\setup-x86_64.exe -q -s https://mirrors.kernel.org/sourceware/cygwin/ -P bash,gcc-core
      - run:
          name: Building main.c with Cygwin GCC
          shell: C:\\cygwin64\\bin\\bash.exe --login -eo pipefail
          command: |
            gcc -o /cygdrive/c/Users/circleci/project/argv-cygwin.exe /cygdrive/c/Users/circleci/project/argv.c
            cp /usr/bin/cygwin1.dll /cygdrive/c/Users/circleci/project/
      - run:
          name: Building main.c with MSVC compiler
          command: |
            $vsInstallPath=$(& 'C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe' -property installationPath)
            Import-Module $vsInstallPath\Common7\Tools\Microsoft.VisualStudio.DevShell.dll
            Enter-VsDevShell -VsInstallPath $vsInstallPath

            cl.exe argv.c
      - run: go build main.go
      - run: .\main.exe
      - store_artifacts:
          path: main.exe
      - store_artifacts:
          path: argv.exe
      - store_artifacts:
          path: argv-cygwin.exe
      - store_artifacts:
          path: cygwin1.dll

workflows:
  run:
    jobs:
      - linux
      - windows
